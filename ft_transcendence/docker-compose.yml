version: '3.8'

services:
  nginx:
    container_name: Frontend
    build:
      context: ./Frontend
    env_file:
      - ./.env
    restart: on-failure
    ports:
      - 8090:8090
    volumes:
      - ./Frontend/srcs:/usr/share/nginx/html
      - ./Frontend/srcs/default:/etc/nginx/conf.d/default
    depends_on:
      - app
    networks:
      - backend

  app:
    build:
      context: ./Backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./Backend/srcs:/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env
    restart: on-failure
    depends_on:
      - postgresdb
    networks:
      - backend

  postgresdb:
    container_name: postgresdb
    build:
      context: ./Postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    restart: on-failure
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
    networks:
      - backend
    
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - ./servers.json:/pgadmin4/servers.json
      - pgadmin_data:/var/lib/pgadmin/
    env_file:
      - ./.env
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@example.com # user name 
      - PGADMIN_DEFAULT_PASSWORD=${SQL_PASSWORD} # pass django
    ports:
      - "8888:80"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
